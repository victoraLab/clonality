% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tenx.R
\name{tenx}
\alias{tenx}
\title{Annotate 10x clones}
\usage{
tenx(
  data = NULL,
  method = "unique_paired",
  only_productive = T,
  only_true_cells = T,
  clonality_input = NULL,
  cell = "T",
  col_res = c("full"),
  save_files = F,
  add_columns = NULL
)
}
\arguments{
\item{data}{Character. Data frame object or the full path to a filtered_contig_annotations.csv file.}

\item{method}{Character. One of: unique_paired, unique_all, sticky_ends. Default: unique_paired.}

\item{only_productive}{Logical. Filter non productive chains.}

\item{only_true_cells}{Logical. Filter low quality / non true cells. Using the default \code{TRUE} with the all_contig_annotations.csv file is equivalent of just running on the filtered_contig_annotations.csv.}

\item{clonality_input}{Named vector. Input parameters for the clonality function.}

\item{cell}{Character. Possible values: \code{B} Bcells, \code{T} Tcells, \code{Tgd} Gamma Delta T cells.}

\item{col_res}{Character. Possible values: \code{full} paired and unique chain columns, \code{reduced} only paired chain columns.}

\item{save_files}{Logical. Whether to save the Cl matrices as xlsx files or not.}

\item{add_columns}{Character. Vector containing columns to add into the final result.}
}
\description{
Returns the input with clonality annotation column with clonal definitions.
}
\examples{
tenx(data = "filtered_contig_annotations", method = "sticky_ends", only_productive = T, clonality_input = c("mismatch" = 0.25), cell = "T",  save.files = F)
}
